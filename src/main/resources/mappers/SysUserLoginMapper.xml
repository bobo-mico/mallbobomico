<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bobomico.dao.SysUserLoginMapper" >
  <resultMap id="BaseResultMap" type="com.bobomico.dao.po.SysUserLogin" >
    <constructor >
      <idArg column="sys_user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="login_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="login_email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="login_phone" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="password" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="salt" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_stats" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="modified_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    sys_user_id, login_name, login_email, login_phone, password, salt, user_stats, modified_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_login
    where sys_user_id = #{sysUserId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user_login
    where sys_user_id = #{sysUserId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bobomico.dao.po.SysUserLogin" >
    insert into sys_user_login (sys_user_id, login_name, login_email, 
      login_phone, password, salt, 
      user_stats, modified_time)
    values (#{sysUserId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{loginEmail,jdbcType=VARCHAR}, 
      #{loginPhone,jdbcType=INTEGER}, #{password,jdbcType=CHAR}, #{salt,jdbcType=VARCHAR}, 
      #{userStats,jdbcType=TINYINT}, #{modifiedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bobomico.dao.po.SysUserLogin" >
    insert into sys_user_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sysUserId != null" >
        sys_user_id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="loginEmail != null" >
        login_email,
      </if>
      <if test="loginPhone != null" >
        login_phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="userStats != null" >
        user_stats,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sysUserId != null" >
        #{sysUserId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginEmail != null" >
        #{loginEmail,jdbcType=VARCHAR},
      </if>
      <if test="loginPhone != null" >
        #{loginPhone,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userStats != null" >
        #{userStats,jdbcType=TINYINT},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <!-- 根据用户id修改用户状态码 -->
  <update id="updateByPrimaryKeySelective" parameterType="com.bobomico.dao.po.SysUserLogin" >
    update sys_user_login
    <set >
      <if test="status != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginEmail != null" >
        login_email = #{loginEmail,jdbcType=VARCHAR},
      </if>
      <if test="loginPhone != null" >
        login_phone = #{loginPhone,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userStats != null" >
        user_stats = #{userStats,jdbcType=TINYINT},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sys_user_id = #{sysUserId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.bobomico.dao.po.SysUserLogin" >
    update sys_user_login
    set login_name = #{loginName,jdbcType=VARCHAR},
      login_email = #{loginEmail,jdbcType=VARCHAR},
      login_phone = #{loginPhone,jdbcType=INTEGER},
      password = #{password,jdbcType=CHAR},
      salt = #{salt,jdbcType=VARCHAR},
      user_stats = #{userStats,jdbcType=TINYINT},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where sys_user_id = #{sysUserId,jdbcType=INTEGER}
  </update>

  <!-- update默认有返回值 -->
  <update id="resetPassword" parameterType="com.bobomico.dao.po.SysUserLogin" >
    update sys_user_login
    set password = #{password,jdbcType=CHAR},
        salt = #{salt,jdbcType=VARCHAR}
    where sys_user_id = #{sysUserId}
  </update>

  <!-- checkEmail -->
  <select id="checkEmail" resultType="int" parameterType="string" >
    select
    count(1)
    from sys_user_login
    where login_email = #{login_email}
  </select>

  <!-- checkUsername -->
  <select id="checkUsername" resultType="int" parameterType="string" >
    select
    count(1)
    from sys_user_login
    where login_name = #{login_name}
  </select>

  <!-- selectLoginForEmail -->
  <select id="selectLoginForEmail" resultMap="BaseResultMap" parameterType="string" >
    select
    <include refid="Base_Column_List" />
    from sys_user_login
    where login_email = #{login_email}
  </select>

  <!-- selectLoginForUsername -->
  <select id="selectLoginForUsername" resultMap="BaseResultMap" parameterType="string" >
    select
    <include refid="Base_Column_List" />
    from sys_user_login
    where login_name = #{login_name}
  </select>

  <!-- 根据用户ID检索用户是否存在 -->
  <!-- selectLoginForUsername -->
  <select id="checkUserId" resultType="int" parameterType="java.lang.Integer" >
    select
    count(1)
    from sys_user_login
    where sys_user_id = #{userId}
  </select>

  <!-- selectLoginForPhone -->
  <select id="selectLoginForPhone" resultMap="BaseResultMap" parameterType="string" >
    select
    <include refid="Base_Column_List" />
    from sys_user_login
    where mobile_phone = #{mobile_phone}
  </select>

  <!-- register -->
  <select id="register" parameterType="com.bobomico.pojo.RegisterUser" statementType="CALLABLE">
    {call
    <choose>
      <when test="sysUserLogin.loginName != null">
        userRegisterForName(#{sysUserLogin.loginName,jdbcType=VARCHAR,mode=IN},
      </when >
      <when test="sysUserLogin.loginEmail != null">
        userRegisterForEmail(#{sysUserLogin.loginEmail,jdbcType=VARCHAR,mode=IN},
      </when >
      <when test="sysUserLogin.loginPhone != null">
        userRegisterForPhone(#{sysUserLogin.loginPhone,jdbcType=INTEGER,mode=IN},
      </when >
    </choose>
    #{sysUserLogin.password,jdbcType=CHAR,mode=IN},
    #{sysUserLogin.salt,jdbcType=VARCHAR,mode=IN},
    #{sysUserLogin.userStats,jdbcType=TINYINT,mode=IN},
    #{resultCount,jdbcType=INTEGER,mode=OUT})}
  </select>
</mapper>