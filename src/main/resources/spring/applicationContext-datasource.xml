<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 读取数据库连接的配置文件 -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="2"/>
        <!-- ignoreUnresolvablePlaceholders 是否忽略不可解析的 Placeholder -->
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>  <!-- 类路径 . . . / / /  -->
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <!-- 数据库连接池 -->
    <bean id="mysql_bobomico" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="${db.initialSize}"/>
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="${db.maxActive}"/>
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="${db.maxIdle}"/>
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="${db.minIdle}"/>
        <!-- 最大建立连接等待时间。如果超过此时间将接到异常。设为－1表示无限制 -->
        <property name="maxWait" value="${db.maxWait}"/>
        <!--#给出一条简单的sql语句进行验证 -->
        <!--<property name="validationQuery" value="select getdate()" />-->
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>
        <!-- 回收被遗弃的（一般是忘了释放的）数据库连接到连接池中 -->
        <!--<property name="removeAbandoned" value="true" />-->
        <!-- 数据库连接过多长时间不用将被视为被遗弃而收回连接池中 -->
        <!--<property name="removeAbandonedTimeout" value="120" />-->
        <!-- #连接的超时时间，默认为半小时。 -->
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>
        <!--# 失效检查线程运行时间间隔，要小于MySQL默认-->
        <property name="timeBetweenEvictionRunsMillis" value="40000"/>
        <!--# 检查连接是否有效-->
        <property name="testWhileIdle" value="true"/>
        <!--# 检查连接有效性的SQL语句-->
        <property name="validationQuery" value="SELECT 1 FROM dual"/>
    </bean>

    <bean id="mysql_bobomico_quartz" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db2.driverClassName}"/>
        <property name="url" value="${db2.url}"/>
        <property name="username" value="${db2.username}"/>
        <property name="password" value="${db2.password}"/>
        <property name="initialSize" value="${db.initialSize}"/>
        <property name="maxActive" value="${db.maxActive}"/>
        <property name="maxIdle" value="${db.maxIdle}"/>
        <property name="minIdle" value="${db.minIdle}"/>
        <property name="maxWait" value="${db.maxWait}"/>
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>
        <property name="removeAbandoned" value="${db.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${db.removeAbandonedTimeout}"/>
        <property name="testWhileIdle" value="${db.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"/>
        <!-- ? -->
        <property name="numTestsPerEvictionRun" value="${db.numTestsPerEvictionRun}"/>
        <!-- ? -->
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>
    </bean>

    <!-- Session工厂 多数据源配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="multipleDataSource"/>
        <property name="mapperLocations" value="classpath*:mappers/*.xml"></property>
    </bean>

    <!-- 扫描dao接口 实现mybatis动态代理 -->
    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bobomico.dao"/>
    </bean>

    <!-- 多数据源必须支持aop -->
    <aop:aspectj-autoproxy/>

    <bean id="multipleDataSource" class="com.bobomico.pubfound.MultipleDataSource">
        <!-- 默认数据源 -->
        <property name="defaultTargetDataSource" ref="mysql_bobomico"/>
        <property name="targetDataSources">
            <map>
                <entry key="business" value-ref="mysql_bobomico"/>
                <entry key="quartz" value-ref="mysql_bobomico_quartz"/>
            </map>
        </property>
    </bean>

    <!-- FIXME 多数据源暂时搁置的配置 -->
    <!-- 使用@Transactional进行声明式事务管理需要声明下面这行 -->
    <!--    <tx:annotation-driven transaction-manager="myTransactionManager" proxy-target-class="true" />-->

    <!-- 事务管理 -->
    <!--    <bean id="myTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
    <!--        <property name="dataSource" ref="mysql_bobomico"/>-->
    <!--        <property name="rollbackOnCommitFailure" value="true"/>-->
    <!--    </bean>-->

</beans>